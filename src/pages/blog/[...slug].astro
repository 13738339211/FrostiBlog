---
import BaseLayout from "@layouts/BaseLayout.astro";
import License from "@components/widgets/License.astro";
import PostInfo from "@components/widgets/PostInfo.astro";
import PostFilter from "@components/widgets/PostFilter.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import { Image } from "astro:assets";
import dayjs from "dayjs";
import { DATE_FORMAT, t } from "@config";
import { Icon } from "astro-icon/components";
import Card from "@/components/temple/Card.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((blog: { slug: any }) => ({
    params: { slug: blog.slug },
    props: { blog },
  }));
}
interface Props {
  blog: CollectionEntry<"blog">;
}

const { blog } = Astro.props;
const { Content, remarkPluginFrontmatter, headings } = await blog.render();
const displayDate = blog.data.pubDate ? dayjs(blog.data.pubDate).format(DATE_FORMAT) : "";
---

<BaseLayout title={blog.data.title} image={blog.data.image} headings={headings} showTOC={true}>
  <!-- Unified Article Card -->
  <Card class="overflow-hidden">
    {
      blog.data.image ? (
        <div class="relative">
          <div class="aspect-video w-full overflow-hidden">
            <Image
              src={blog.data.image}
              alt={blog.data.title}
              width={1200}
              height={630}
              format="webp"
              loading="eager"
              class="w-full h-full object-cover"
            />
          </div>

          <div class="absolute bottom-4 left-4 lg:bottom-6 lg:left-6">
            <div class="inline-block bg-black/60 backdrop-blur-md px-4 py-2 rounded-xl border border-white/40 shadow-lg">
              <h1 class="text-xl sm:text-2xl lg:text-4xl font-bold text-white">{blog.data.title}</h1>
            </div>
          </div>

          {blog.data.description && (
            <div class="absolute bottom-4 right-4 lg:bottom-6 lg:right-6">
              <div class="dropdown dropdown-top dropdown-end dropdown-hover">
                <label
                  tabindex="0"
                  class="group btn btn-sm px-2 bg-black/60 backdrop-blur-md hover:bg-black/80 border border-white/40 text-white shadow-lg rounded-full flex items-center gap-0 transition-all duration-300 ease-in-out"
                >
                  <Icon name="lucide:info" class="w-4 h-4 flex-shrink-0" />
                  <span class="w-0 overflow-hidden group-hover:w-20 transition-all duration-300 text-xs whitespace-nowrap">
                    {t("label.learnMore")}
                  </span>
                </label>
                <div
                  tabindex="0"
                  class="dropdown-content z-[1] card w-64 sm:w-80 p-2 shadow-lg bg-black/70 backdrop-blur-md text-white border border-white/20 mb-4"
                  data-state="closed"
                >
                  <div class="card-body p-3">
                    <p class="text-sm">{blog.data.description}</p>
                  </div>
                </div>
              </div>
            </div>
          )}
        </div>
      ) : (
        <div class="p-4 sm:p-6 bg-base-200">
          <h1 class="text-2xl sm:text-3xl lg:text-4xl font-bold text-base-content">{blog.data.title}</h1>
          {blog.data.description && (
            <p class="text-base-content/80 text-sm sm:text-base mt-4">{blog.data.description}</p>
          )}
        </div>
      )
    }

    <!-- Article metadata and content in a single section -->
    <div class="p-4 sm:p-6">
      <!-- Article info using PostInfo component -->
      <PostInfo
        pubDate={displayDate}
        badge={blog.data.badge}
        word={remarkPluginFrontmatter.totalCharCount}
        time={remarkPluginFrontmatter.readingTime}
      />

      <!-- Categories and tags using PostFilter component -->
      <div class="mb-6">
        <PostFilter categories={blog.data.categories} tags={blog.data.tags} />
      </div>

      <!-- Article Content -->
      <div class="mt-8">
        <div id="content" class="prose max-w-none prose-headings:scroll-mt-20 prose-img:rounded-xl prose-img:mx-auto">
          <Content />
          <License
            title={blog.data.title}
            image={blog.data.image}
            pubDate={blog.data.pubDate}
            badge={blog.data.badge}
            categories={blog.data.categories}
            tags={blog.data.tags}
            word={remarkPluginFrontmatter.totalCharCount}
            time={remarkPluginFrontmatter.readingTime}
          />
        </div>
      </div>
    </div>
  </Card>
</BaseLayout>

<script>
  document.addEventListener("astro:page-load", () => {
    // Get all info buttons and dropdown contents
    const infoButtons = document.querySelectorAll(".dropdown label");
    const dropdownContents = document.querySelectorAll(".dropdown-content");

    // Add click event listeners
    infoButtons.forEach((button, index) => {
      button.addEventListener("click", () => {
        const content = dropdownContents[index];
        const currentState = content.getAttribute("data-state");

        // Toggle state
        if (currentState === "closed") {
          content.setAttribute("data-state", "open");
          // Add animation classes when opening
          content.classList.add("scale-100", "opacity-100");
          content.classList.remove("scale-90", "opacity-0");
        } else {
          content.setAttribute("data-state", "closed");
          // Remove animation classes when closing
          content.classList.add("scale-90", "opacity-0");
          content.classList.remove("scale-100", "opacity-100");
        }
      });
    });
  });
</script>

<style is:global>
  /* Content styling */
  code {
    font-size: 0.875em;
  }

  /* Animation for dropdown */
  .dropdown-content {
    transition: all 0.2s ease-out;
    transform-origin: bottom right;
    opacity: 0;
    transform: scale(0.9);
  }

  .dropdown-content[data-state="open"] {
    opacity: 1;
    transform: scale(1);
  }
</style>
