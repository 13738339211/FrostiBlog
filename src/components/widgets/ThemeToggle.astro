---
import { SITE_THEME } from "@config";
import { Icon } from "astro-icon/components";
---

<button
  id="theme-toggle"
  class="btn btn-circle btn-sm md:btn-md bg-base-100 shadow-sm hover:scale-110"
  aria-label="Toggle theme"
>
  <!-- Sun icon for dark mode (shown when dark theme is active) -->
  <Icon name="lucide:sun" class="theme-toggle-icon h-5 w-5 sun-icon" />

  <!-- Moon icon for light mode (shown when light theme is active) -->
  <Icon name="lucide:moon" class="theme-toggle-icon h-5 w-5 moon-icon hidden" />
</button>

<script define:vars={{ SITE_THEME }}>
  // Function to update icons based on current theme
  const updateThemeIcons = (isDark) => {
    const sunIcon = document.querySelector(".sun-icon");
    const moonIcon = document.querySelector(".moon-icon");

    if (sunIcon && moonIcon) {
      if (isDark) {
        sunIcon.classList.remove("hidden");
        moonIcon.classList.add("hidden");
      } else {
        sunIcon.classList.add("hidden");
        moonIcon.classList.remove("hidden");
      }
    }
  };

  // Apply correct icons on page load and navigation
  document.addEventListener("astro:page-load", () => {
    const themeToggle = document.getElementById("theme-toggle");
    const currentTheme = document.documentElement.getAttribute("data-theme");

    // Initialize icon state based on current theme
    updateThemeIcons(currentTheme === SITE_THEME.dark);

    if (themeToggle) {
      // Toggle theme on click
      themeToggle.addEventListener("click", () => {
        const currentTheme = document.documentElement.getAttribute("data-theme");
        const newTheme = currentTheme === SITE_THEME.light ? SITE_THEME.dark : SITE_THEME.light;

        // Add animation class
        themeToggle.classList.add("animate-spin-once");

        // Set new theme
        document.documentElement.setAttribute("data-theme", newTheme);
        localStorage.setItem("theme", newTheme);

        // Update icons
        updateThemeIcons(newTheme === SITE_THEME.dark);

        // Remove animation class after animation completes
        setTimeout(() => {
          themeToggle.classList.remove("animate-spin-once");
        }, 300);
      });
    }
  });
</script>

<style>
  @keyframes spin-once {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  .animate-spin-once {
    animation: spin-once 0.3s ease-in-out;
  }

  .theme-toggle-icon {
    transition:
      opacity 0.2s ease-in-out,
      transform 0.2s ease-in-out;
  }
</style>
